openapi: 3.0.0
info:
  description: Backend server documentation
  version: 1.0.0
  title: Backend
tags:
  - name: user
    description: User management
  - name: status
    description: API status
  - name: ticket
    description: Ticket managment
paths:
  /status:
    get:
      tags:
        - status
      summary: Get API status
      description: ""
      operationId: getStatus
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiStatus"
  /login:
    post:
      tags:
        - user
      summary: Login as user
      description: ""
      operationId: loginUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginUser"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BearerToken"
        "400":
          description: Bad request
  /user:
    post:
      tags:
        - user
      summary: Create new user
      description: ""
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewUser"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Bad request
    get:
      security:
        - bearerAuth: []
      tags:
        - user
      summary: Get current user
      description: ""
      operationId: getCurrentUser
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Bad request
  "/user/{email}":
    patch:
      security:
        - bearerAuth: []
      tags:
        - user
      summary: Patch user
      description: "At least one field is required. Only admin can specify roles and disabled fields.
Non-admin user can only patch themselves. Admin can patch anyone."
      operationId: patchUser
      parameters:
        - name: email
          in: path
          description: User email
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
        required: true
      responses:
        "200":
          description: OK
        "400":
          description: Bad request
  /users:
    get:
      security:
        - bearerAuth: []
      tags:
        - user
      summary: Get all users
      description: ""
      operationId: getUsers
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Users"
        "400":
          description: Bad request
  /ticket:
    get:
      security:
        - bearerAuth: []
      tags:
        - ticket
      summary: Get current user tickets
      parameters:
        - name: all
          in: query
          requied: false
          description: "Return all tickets if all is true and current user role is admin"
          schema:
            type: boolean
      description: ""
      operationId: getTickets
      response:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Tickets"
          "400":
            description: Bad request
    post:
      security:
        - bearerAuth: []
      tags:
        - ticket
      summary: Create new ticket
      description: "Create new ticket which author is logged user"
      operationId: createTicket
      requestBody:
        content:
          application/json:
            schema:
              content:
                type: string
      response:
        "200":
          description: OK
          content:
            application/json:
              schema:
                content:
                  type: string
        "400":
          description: Bad request
  /ticket/{ticketId}:
    patch:
      security:
        - bearerAuth: []
      tags:
        - ticket
      summary: Patch ticket
      description: "At least one field is required. Non-admin user can only patch themselves.
       Admin can patch anyone."
      operationId: patchTicket
      parameters:
        - name: ticketId
          in: path
          description: ticket id
          required: true
          schema:
            type: int
      requestBody:
        content:
          application/json:
            schema:
              content:
                type: string
              closed:
                type: boolean
              requied:
                - content
                - closed
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                content:
                  type: string
                closed:
                  type: boolean
        "400":
          description: Bad request

servers:
  - url: http://149.156.146.249:60001/api
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    BearerToken:
      type: object
      properties:
        token:
          type: string
    LoginUser:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    NewUser:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        password:
          type: string
    Users:
      type: array
      items:
        $ref: "#/components/schemas/User"
    User:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        disabled:
          type: boolean
        roles:
          type: array
          items:
            type: string
    Tickets:
      type: array
      items:
        $ref: "#/components/schemas/Ticket"
    Ticket:
      type: object
      properties:
        id:
          type: integer
        closed:
          type: boolean
        author:
          type: string
        create_data:
          type: string
    ApiStatus:
      type: object
      properties:
        status:
          type: string
